rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Others can read profiles
    }
    
    // Posts are readable by all authenticated users
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      // Likes subcollection
      match /likes/{userId} {
        allow read, write: if request.auth != null;
      }
      
      // Comments subcollection
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
      }
    }
    
    // Notifications - users can only read their own
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.recipientId;
      allow create: if request.auth != null; // For organizers to create
    }
    
    // Events are read-only for participants
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        getUserRole(request.auth.uid) == 'organizer';
    }
    
    // Helper function
    function getUserRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
  }
}